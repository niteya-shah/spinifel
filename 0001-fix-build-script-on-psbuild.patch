From 4d0c2de651a6ba421427036fb6555d3170090445 Mon Sep 17 00:00:00 2001
From: Valerio Mariani <valmar@slac.stanford.edu>
Date: Wed, 27 Oct 2021 17:39:58 -0700
Subject: [PATCH] fix build script on psbuild

---
 setup/build_from_scratch.sh | 22 +++++++++++++---
 setup/mk_env.sh             |  8 +++---
 setup/rebuild_cufinufft.sh  | 15 +++++++++--
 setup/rebuild_legion.sh     | 11 ++++++--
 setup/reconfigure_legion.sh | 62 +++++++++++++++++++++++++++++++--------------
 5 files changed, 87 insertions(+), 31 deletions(-)

diff --git a/setup/build_from_scratch.sh b/setup/build_from_scratch.sh
index 106c61f..18ebb86 100755
--- a/setup/build_from_scratch.sh
+++ b/setup/build_from_scratch.sh
@@ -91,7 +91,12 @@ PACKAGE_LIST=(
     prometheus_client
 )
 
-conda create -y -p "$CONDA_ENV_DIR" "${PACKAGE_LIST[@]}" -c defaults -c anaconda
+
+if [[ ${target} = "psbuild"* ]]; then
+    conda create -y -p "$CONDA_ENV_DIR" "${PACKAGE_LIST[@]}" -c conda-forge
+else
+   conda create -y -p "$CONDA_ENV_DIR" "${PACKAGE_LIST[@]}" -c defaults -c anaconda
+fi
 
 conda activate "$CONDA_ENV_DIR"
 
@@ -101,14 +106,23 @@ conda install -y bitstruct krtc -c conda-forge
 
 # Extra deps required for psana machines, since there is no module system
 if [[ ${target} = "psbuild"* ]]; then
-    conda install -y compilers openmpi cudatoolkit-dev -c conda-forge
+    conda install -y compilers openmpi cudatoolkit=11.4 cudatoolkit-dev=11.4 cmake make -c conda-forge
+fi
+
+
+if [[ ${target} = "psbuild"* ]]; then
+    conda install -y cupy mrcfile -c conda-forge
+    pip install -v --no-binary mpi4py mpi4py
+else
+    CC=$MPI4PY_CC MPICC=$MPI4PY_MPICC pip install -v --no-binary mpi4py mpi4py
+    pip install --no-cache-dir mrcfile
+    pip install --no-cache-dir cupy
+
 fi
 
 # Install pip packages
-CC=$MPI4PY_CC MPICC=$MPI4PY_MPICC pip install -v --no-binary mpi4py mpi4py
 pip install --no-cache-dir callmonitor
 pip install --no-cache-dir PyNVTX
-pip install --no-cache-dir mrcfile
 (
     if [[ $(hostname --fqdn) = *".spock."* ]]; then
         export CUPY_INSTALL_USE_HIP=1
diff --git a/setup/mk_env.sh b/setup/mk_env.sh
index ba01f11..21d43ea 100755
--- a/setup/mk_env.sh
+++ b/setup/mk_env.sh
@@ -192,11 +192,11 @@ export GASNET_CONDUIT=ibv
 EOF
 elif [[ ${target} = "psbuild"* ]]; then # psana machines
     cat >> env.sh <<EOF
-export CC=gcc
-export CXX=g++
+#export CC=gcc
+#export CXX=g++
 # compilers for mpi4py
-export MPI4PY_CC=gcc
-export MPI4PY_MPICC=mpicc
+#export MPI4PY_CC=gcc
+#export MPI4PY_MPICC=mpicc
 
 export LEGION_USE_GASNET=${LEGION_USE_GASNET:-0}
 EOF
diff --git a/setup/rebuild_cufinufft.sh b/setup/rebuild_cufinufft.sh
index 73ce2e9..507b4f1 100755
--- a/setup/rebuild_cufinufft.sh
+++ b/setup/rebuild_cufinufft.sh
@@ -16,10 +16,21 @@ elif [[ ${target} = "perlmutter"* ]]; then
     make -j${THREADS:-8} site=nersc_cgpu lib
 elif [[ ${target} = *"summit"* || ${target} = *"ascent"* ]]; then
     make -j${THREADS:-8} site=olcf_summit lib
+elif [[ ${target} = "psbuild"* ]]; then
+    export NVCCFLAGS="-std=c++17 -ccbin=${CXX} -O3 ${NVARCH} -Wno-deprecated-gpu-targets --default-stream per-thread -Xcompiler "\"${CXXFLAGS}\"
+    make -j${THREADS:-8} site=psbuild lib
 else
     echo "Cannot build cuFINUFFT for this architecture"
     exit
 fi
-pip install --no-cache-dir pycuda
-LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUFINUFFT_DIR pip install --no-cache-dir .
+
+
+if [[ ${target} = "psbuild"* ]]; then
+    conda install -y -c conda-forge pycuda
+    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUFINUFFT_DIR:/opt/nvidia/usr/lib64 pip install --no-cache-dir .
+else
+    pip install --no-cache-dir pycuda
+    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUFINUFFT_DIR pip install --no-cache-dir .
+fi
+
 popd
diff --git a/setup/rebuild_legion.sh b/setup/rebuild_legion.sh
index 322ceb0..5073562 100755
--- a/setup/rebuild_legion.sh
+++ b/setup/rebuild_legion.sh
@@ -2,6 +2,8 @@
 
 set -e
 
+target=${SPINIFEL_TARGET:-$(hostname --fqdn)}
+
 root_dir="$(dirname "${BASH_SOURCE[0]}")"
 source "$root_dir"/env.sh
 
@@ -9,7 +11,12 @@ source "$root_dir"/legion_build_dir.sh
 
 pushd "$legion_build"
 
-make -j${THREADS:-8}
-make install
+if [[ ${target} = "psbuild"* ]]; then
+    ${CONDA_PREFIX}/bin/make -j${THREADS:-8}
+    ${CONDA_PREFIX}/bin/make install
+else
+    make -j${THREADS:-8}
+    make install
+fi
 
 popd
diff --git a/setup/reconfigure_legion.sh b/setup/reconfigure_legion.sh
index de30599..10700c3 100755
--- a/setup/reconfigure_legion.sh
+++ b/setup/reconfigure_legion.sh
@@ -2,6 +2,8 @@
 
 set -e
 
+target=${SPINIFEL_TARGET:-$(hostname --fqdn)}
+
 root_dir="$(realpath "$(dirname "${BASH_SOURCE[0]}")")"
 source "$root_dir"/env.sh
 
@@ -12,24 +14,46 @@ EOF
 
 pushd "$legion_build"
 
-export LDFLAGS="-Wl,-rpath,$CONDA_ENV_DIR/lib"
-
-cmake -DCMAKE_PREFIX_PATH="$CONDA_ENV_DIR" \
-    -DCMAKE_BUILD_TYPE=$([ $LEGION_DEBUG -eq 1 ] && echo Debug || echo Release) \
-    -DBUILD_SHARED_LIBS=ON \
-    -DLegion_BUILD_BINDINGS=ON \
-    -DLegion_ENABLE_TLS=ON \
-    -DLegion_USE_Python=ON \
-    -DPYTHON_EXECUTABLE="$(which python)" \
-    -DLegion_USE_CUDA=OFF \
-    -DLegion_USE_OpenMP=ON \
-    -DLegion_USE_GASNet=$([ $LEGION_USE_GASNET -eq 1 ] && echo ON || echo OFF) \
-    -DGASNet_ROOT_DIR="$GASNET_ROOT" \
-    -DGASNet_CONDUITS=$GASNET_CONDUIT \
-    -DLegion_USE_HDF5=ON \
-    -DLegion_MAX_DIM=4 \
-    -DCMAKE_INSTALL_PREFIX="$LEGION_INSTALL_DIR" \
-    -DCMAKE_INSTALL_LIBDIR="$LEGION_INSTALL_DIR/lib" \
-    "$root_dir"/legion
+if [[ ${target} = "psbuild"* ]]; then
+    export LDFLAGS="-Wl,-rpath,$CONDA_ENV_DIR/lib -lhdf5 -lz"
+
+    ${CONDA_PREFIX}/bin/cmake -DCMAKE_PREFIX_PATH="$CONDA_ENV_DIR" \
+        -DCMAKE_BUILD_TYPE=$([ $LEGION_DEBUG -eq 1 ] && echo Debug || echo Release) \
+        -DBUILD_SHARED_LIBS=ON \
+        -DLegion_BUILD_BINDINGS=ON \
+        -DLegion_ENABLE_TLS=ON \
+        -DLegion_USE_Python=ON \
+        -DPYTHON_EXECUTABLE="$(which python)" \
+        -DLegion_USE_CUDA=OFF \
+        -DLegion_USE_OpenMP=ON \
+        -DLegion_USE_GASNet=$([ $LEGION_USE_GASNET -eq 1 ] && echo ON || echo OFF) \
+        -DGASNet_ROOT_DIR="$GASNET_ROOT" \
+        -DGASNet_CONDUITS=$GASNET_CONDUIT \
+        -DLegion_USE_HDF5=ON \
+        -DLegion_MAX_DIM=4 \
+        -DCMAKE_INSTALL_PREFIX="$LEGION_INSTALL_DIR" \
+        -DCMAKE_INSTALL_LIBDIR="$LEGION_INSTALL_DIR/lib" \
+        "$root_dir"/legion
+else
+    export LDFLAGS="-Wl,-rpath,$CONDA_ENV_DIR/lib"
+
+    cmake -DCMAKE_PREFIX_PATH="$CONDA_ENV_DIR" \
+        -DCMAKE_BUILD_TYPE=$([ $LEGION_DEBUG -eq 1 ] && echo Debug || echo Release) \
+        -DBUILD_SHARED_LIBS=ON \
+        -DLegion_BUILD_BINDINGS=ON \
+        -DLegion_ENABLE_TLS=ON \
+        -DLegion_USE_Python=ON \
+        -DPYTHON_EXECUTABLE="$(which python)" \
+        -DLegion_USE_CUDA=OFF \
+        -DLegion_USE_OpenMP=ON \
+        -DLegion_USE_GASNet=$([ $LEGION_USE_GASNET -eq 1 ] && echo ON || echo OFF) \
+        -DGASNet_ROOT_DIR="$GASNET_ROOT" \
+        -DGASNet_CONDUITS=$GASNET_CONDUIT \
+        -DLegion_USE_HDF5=ON \
+        -DLegion_MAX_DIM=4 \
+        -DCMAKE_INSTALL_PREFIX="$LEGION_INSTALL_DIR" \
+        -DCMAKE_INSTALL_LIBDIR="$LEGION_INSTALL_DIR/lib" \
+        "$root_dir"/legion
+fi
 
 popd
-- 
1.8.3.1

