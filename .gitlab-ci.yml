# global configuration, applies to all machines
variables:
  THREADS: 4 # reduce parallelism to avoid OOM in Legion build

# this configuration is intended for use at Ascent / https://code.ornl.gov
.ascent_variables: &ascent_variables
  SCHEDULER_PARAMETERS: "-P CHM137 -W 2:30 -nnodes 1 -alloc_flags gpumps"
  EXTERNAL_WORKDIR: /gpfs/wolf/chm137/proj-shared/ci/${CI_PIPELINE_ID}

  # launcher for tests
  SPINIFEL_TEST_LAUNCHER: "jsrun -n1 -a1 -g1"
  SPINIFEL_TEST_LAUNCHER_MULTI: "jsrun -n2 -a1 -g1"
  SPINIFEL_PSANA2_LAUNCHER: "jsrun -n4 -g1"

  # spinifel legion
  SPINIFEL_LEGION: "legion_python -ll:py 1  -ll:pyomp 2 -ll:csize 32768 legion_main.py  --default-settings=test_mpi.toml"

  # for mpi-xtc2 tests
  SPINIFEL_TEST_FLAG: 1
  all_proxy: "socks://proxy.ccs.ornl.gov:3128/"
  ftp_proxy: "ftp://proxy.ccs.ornl.gov:3128/"
  http_proxy: "http://proxy.ccs.ornl.gov:3128/"
  https_proxy: "http://proxy.ccs.ornl.gov:3128/"
  no_proxy: "localhost,127.0.0.0/8,*.ccs.ornl.gov"

  # for script test
  out_dir: /gpfs/wolf/chm137/proj-shared/ci/${CI_PIPELINE_ID}/spinifel_output
  CUPY_CACHE_DIR: /gpfs/wolf/chm137/proj-shared/ci/${CI_PIPELINE_ID}/cupy_cache
  PYCUDA_CACHE_DIR: /gpfs/wolf/chm137/proj-shared/ci/${CI_PIPELINE_ID}

  # for pytest
  test_data_dir: /gpfs/wolf/chm137/proj-shared/spinifel_data/testdata

  IS_CRUSHER_JOB: 0

# this configuration is intended for legion psana2
.legion_psana2_variables: &legion_psana2_variables
  PS_PARALLEL: "legion"

# this configuration is intended for use at Crusher / https://code.olcf.ornl.gov
.crusher_variables: &crusher_variables
  SCHEDULER_PARAMETERS: "-A CHM137_crusher -t 2:30:00 -N 1 -p batch"
  EXTERNAL_WORKDIR: /lustre/orion/proj-shared/chm137/ci/${CI_PIPELINE_ID}

  # launcher for tests
  SPINIFEL_TEST_LAUNCHER: "srun -n1"

  # for script test
  DATA_DIR: /lustre/orion/proj-shared/chm137/spinifel_data
  DATA_FILENAME: 2CEX-10k-2.h5
  out_dir: /lustre/orion/proj-shared/chm137/ci/${CI_PIPELINE_ID}/spinifel_output
  CUPY_CACHE_DIR: /lustre/orion/proj-shared/chm137/ci/${CI_PIPELINE_ID}/cupy_cache
  PYCUDA_CACHE_DIR: /lustre/orion/proj-shared/chm137/ci/${CI_PIPELINE_ID}

  # for pytest
  test_data_dir: /lustre/orion/proj-shared/chm137/spinifel_data/testdata

  # replace pycuda with PybindGPU and disable fsc check (temporary)
  FRONTIER_EXTRAS: "runtime.use_pygpu=true runtime.chk_convergence=false algorithm.N_generations=3 fsc.pdb_path="

  IS_CRUSHER_JOB: 1


# scripts for the various test stages
.build_script: &build_script
  before_script:
    - mkdir -p $(dirname ${EXTERNAL_WORKDIR})
    - cp -r ${CI_PROJECT_DIR} ${EXTERNAL_WORKDIR}
    - cd ${EXTERNAL_WORKDIR}
    - git clean -fxd
    - git submodule update --init --recursive
  script:
    - ./setup/build_from_scratch.sh

.test_before_script: &test_before_script
  before_script:
    - cd ${EXTERNAL_WORKDIR}
    - mkdir -p ${out_dir}
    - source ./setup/env.sh

.unit_test_script: &unit_test_script
  script:
    - ./scripts/test.sh

.mpi_hdf5_test_script: &mpi_hdf5_test_script
  script:
    - $SPINIFEL_TEST_LAUNCHER python -m spinifel --default-settings=test_mpi.toml --mode=mpi $FRONTIER_EXTRAS

.mpi_xtc2_test_script: &mpi_xtc2_test_script
  script:
    - $SPINIFEL_PSANA2_LAUNCHER python -u -m spinifel --default-settings=test_mpi.toml --mode=mpi psana.enable=true $FRONTIER_EXTRAS

.legion_test_script: &legion_test_script
  script:
    - PYTHONPATH="$PYTHONPATH:$EXTERNAL_WORKDIR:$PWD/mpi4py_poison_wrapper" $SPINIFEL_TEST_LAUNCHER legion_python -ll:py 1 -ll:pyomp 2  -ll:csize 8192 legion_main.py --default-settings=summit_ci.toml --mode=legion

.legion_hdf5_test_script: &legion_hdf5_test_script
  script:
    - PYTHONPATH="$PYTHONPATH:$EXTERNAL_WORKDIR:$PWD/mpi4py_poison_wrapper" $SPINIFEL_TEST_LAUNCHER $SPINIFEL_LEGION --mode=legion

.legion_hdf5_multirank_test_script: &legion_hdf5_multirank_test_script
  script:
    - PYTHONPATH="$PYTHONPATH:$EXTERNAL_WORKDIR:$PWD/mpi4py_poison_wrapper" $SPINIFEL_TEST_LAUNCHER_MULTI $SPINIFEL_LEGION --mode=legion

.legion_xtc2_multirank_test_script: &legion_xtc2_multirank_test_script
  script:
    - PYTHONPATH="$PYTHONPATH:$EXTERNAL_WORKDIR:$PWD/mpi4py_poison_wrapper" $SPINIFEL_TEST_LAUNCHER_MULTI $SPINIFEL_LEGION --mode=legion psana.enable=true psana.ps_smd_n_events=1000

.legion_xtc2_stream_multirank_test_script: &legion_xtc2_stream_multirank_test_script
  script:
    - PYTHONPATH="$PYTHONPATH:$EXTERNAL_WORKDIR:$PWD/mpi4py_poison_wrapper" $SPINIFEL_TEST_LAUNCHER_MULTI $SPINIFEL_LEGION --mode=legion_psana2 psana.enable=true psana.ps_smd_n_events=1000 algorithm.N_gens_stream=2 algorithm.N_images_max=4000

.legion_xtc2_stream_multiconf_multirank_test_script: &legion_xtc2_stream_multiconf_multirank_test_script
  script:
    - PYTHONPATH="$PYTHONPATH:$EXTERNAL_WORKDIR:$PWD/mpi4py_poison_wrapper" $SPINIFEL_TEST_LAUNCHER_MULTI $SPINIFEL_LEGION --mode=legion_psana2 algorithm.N_conformations=2 psana.enable=true psana.ps_smd_n_events=1000 algorithm.N_gens_stream=2 algorithm.N_images_max=4000 algorithm.N_generations=6

.legion_xtc2_multiconf_multirank_test_script: &legion_xtc2_multiconf_multirank_test_script
  script:
    - PYTHONPATH="$PYTHONPATH:$EXTERNAL_WORKDIR:$PWD/mpi4py_poison_wrapper" $SPINIFEL_TEST_LAUNCHER_MULTI $SPINIFEL_LEGION --mode=legion psana.enable=true psana.ps_smd_n_events=1000 algorithm.N_conformations=3 algorithm.N_generations=6

.legion_multiconf_multirank_test_script: &legion_multiconf_multirank_test_script
  script:
    - PYTHONPATH="$PYTHONPATH:$EXTERNAL_WORKDIR:$PWD/mpi4py_poison_wrapper" $SPINIFEL_TEST_LAUNCHER_MULTI $SPINIFEL_LEGION --mode=legion algorithm.N_conformations=3

.sequential_test_script: &sequential_test_script
  script:
    - $SPINIFEL_TEST_LAUNCHER python -m spinifel --default-settings=test_mpi.toml --mode=sequential $FRONTIER_EXTRAS

.large_test_script: &large_test_script
  script:
    - $SPINIFEL_TEST_LAUNCHER python -m spinifel --default-settings=test_mpi.toml --mode=mpi runtime.small_problem=false $FRONTIER_EXTRAS

.finufft_test_script: &finufft_test_script
  script:
    - $SPINIFEL_TEST_LAUNCHER python -m spinifel --default-settings=test_mpi.toml --mode=mpi runtime.use_cuda=false runtime.use_cufinufft=false fsc.fsc_min_cc=1.6 fsc.fsc_min_change_cc=0.1 runtime.use_single_prec=false $FRONTIER_EXTRAS

.nocuda_test_script: &nocuda_test_script
  script:
    - $SPINIFEL_TEST_LAUNCHER python -m spinifel --default-settings=test_mpi.toml --mode=mpi runtime.use_cufinufft=false runtime.use_cuda=false runtime.use_cupy=false fsc.fsc_min_cc=0.6 fsc.fsc_min_change_cc=0.1 runtime.use_single_prec=false $FRONTIER_EXTRAS

.cleanup_script: &cleanup_script
  script:
    - rm -rf ${EXTERNAL_WORKDIR}


# rules that determine when each job runs
.test_rules: &test_rules
  rules:
    # run don't run Crusher jobs on Ascent and vice versa
    - if: '$IS_CRUSHER_JOB == "1" && $RUN_CRUSHER_JOBS != "1"'
      when: never
    - if: '$IS_CRUSHER_JOB != "1" && $RUN_CRUSHER_JOBS == "1"'
      when: never
    # if no other rule matches, run the job
    - when: always


stages:
  - build
  - unit_test
  - test
  - cleanup


######################################################################
### CI Configuration for Ascent
######################################################################

build_ascent:
  <<: [*test_rules, *build_script]
  stage: build
  tags:
    - nobatch
  variables:
    <<: [*ascent_variables]

unit_test_ascent:
  <<: [*test_rules, *test_before_script, *unit_test_script]
  stage: unit_test
  tags:
    - batch
  variables:
    <<: [*ascent_variables]

test_mpi_hdf5_ascent:
  <<: [*test_rules, *test_before_script, *mpi_hdf5_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables]

test_mpi_xtc2_ascent:
  <<: [*test_rules, *test_before_script, *mpi_xtc2_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables]


test_legion_hdf5_ascent:
  <<: [*test_rules, *test_before_script, *legion_hdf5_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables]

test_legion_hdf5_multirank_ascent:
  <<: [*test_rules, *test_before_script, *legion_hdf5_multirank_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables]

test_legion_xtc2_multirank_ascent:
  <<: [*test_rules, *test_before_script, *legion_xtc2_multirank_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables, *legion_psana2_variables]

test_legion_xtc2_stream_multirank_ascent:
  <<: [*test_rules, *test_before_script, *legion_xtc2_stream_multirank_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables, *legion_psana2_variables]

test_legion_xtc2_stream_multiconf_multirank_ascent:
  <<: [*test_rules, *test_before_script, *legion_xtc2_stream_multiconf_multirank_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables, *legion_psana2_variables]

test_legion_xtc2_multiconf_multirank_ascent:
  <<: [*test_rules, *test_before_script, *legion_xtc2_multiconf_multirank_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables, *legion_psana2_variables]

test_legion_multiconf_multirank_ascent:
  <<: [*test_rules, *test_before_script, *legion_multiconf_multirank_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables]

test_legion_ascent:
 <<: [*test_rules, *test_before_script, *legion_test_script]
 stage: test
 tags:
   - batch
 variables:
   <<: [*ascent_variables]

# TODO: suggest deprecating
#test_sequential_ascent:
#  <<: [*test_rules, *test_before_script, *sequential_test_script]
#  stage: test
#  tags:
#    - batch
#  variables:
#    <<: [*ascent_variables]

# TODO: Skip for now -- runs out of memory -- not sure why though
# test_large_ascent:
#  <<: [*test_rules, *test_before_script, *large_test_script]
#   stage: test
#   tags:
#     - batch
#  variables:
#    <<: [*ascent_variables]

test_finufft_ascent:
  <<: [*test_rules, *test_before_script, *finufft_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables]

test_nocuda_ascent:
  <<: [*test_rules, *test_before_script, *nocuda_test_script]
  stage: test
  tags:
    - batch
  variables:
    <<: [*ascent_variables]

cleanup_ascent:
  <<: [*test_rules, *cleanup_script]
  stage: cleanup
  tags:
    - nobatch
  variables:
    <<: [*ascent_variables]


######################################################################
### CI Configuration for Crusher
######################################################################

build_crusher:
  <<: [*test_rules, *build_script]
  stage: build
  tags:
    - shell
    - crusher
  variables:
    <<: [*crusher_variables]

unit_test_crusher:
  <<: [*test_rules, *test_before_script, *unit_test_script]
  stage: unit_test
  tags:
    - slurm
    - crusher
  variables:
    <<: [*crusher_variables]

test_mpi_crusher:
  <<: [*test_rules, *test_before_script, *mpi_hdf5_test_script]
  stage: test
  tags:
    - slurm
    - crusher
  variables:
    <<: [*crusher_variables]

test_legion_crusher:
 <<: [*test_rules, *test_before_script, *legion_test_script]
 stage: test
 tags:
   - slurm
   - crusher
 variables:
   <<: [*crusher_variables]

# TODO: suggest deprecating
#test_sequential_crusher:
#  <<: [*test_rules, *test_before_script, *sequential_test_script]
#  stage: test
#  tags:
#    - slurm
#    - crusher
#  variables:
#    <<: [*crusher_variables]

# TODO: Skip for now -- runs out of memory -- not sure why though
# test_large_crusher:
#  <<: [*test_rules, *test_before_script, *large_test_script]
#   stage: test
#   tags:
#     - slurm
#    - crusher
#  variables:
#    <<: [*crusher_variables]

test_finufft_crusher:
  <<: [*test_rules, *test_before_script, *finufft_test_script]
  stage: test
  tags:
    - slurm
    - crusher
  variables:
    <<: [*crusher_variables]

test_nocuda_crusher:
  <<: [*test_rules, *test_before_script, *nocuda_test_script]
  stage: test
  tags:
    - slurm
    - crusher
  variables:
    <<: [*crusher_variables]

cleanup_crusher:
  <<: [*test_rules, *cleanup_script]
  stage: cleanup
  tags:
    - shell
    - crusher
  variables:
    <<: [*crusher_variables]
